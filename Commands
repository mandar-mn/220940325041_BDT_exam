Name - Mandar Manish Ghaisas
No - 220940325041



HIVE 
Q1) Write a program to find the count of customers for each profession.

create table customer41(cust_id INT,firstname STRING,lastname STRING,age INT,profession STRING) row format delimited fields terminated by ',
' stored as textfile;   
load data local inpath 'custs.txt' overwrite into table customer41; 


select profession count(*) as total_emp from customer41 group by profession order by total_emp;  

Output 
Social Worker   1                                                                                                                                
Writer  101                                                                                                                                      
Artist  175                                                                                                                                      
Environmental scientist 176                                                                                                                      
Carpenter       181                                                                                                                              
Dancer  185                                                                                                                                      
Therapist       187                                                                                                                              
Economist       189                                                                                                                              
Real estate agent       191                                                                                                                      
Electrical engineer     192                                                                                                                      
Nurse   192                                                                                                                                      
Civil engineer  193                                                                                                                              
Automotive mechanic     193                                                                                                                      
Psychologist    194                                                                                                                              
Electrician     194                                                                                                                              
Agricultural and food scientist 195                                                                                                              
Athlete 196                                                                                                                                      
Statistician    196                                                                                                                              
Judge   196                                                                                                                                      
Doctor  197                                                                                                                                      
Financial analyst       198                                                                                                                      
Accountant      199                                                                                                                              
Reporter        200                                                                                                                              
Secretary       200                                                                                                                              
Coach   201                                                                                                                                      
Physicist       201                                                                                                                              
Farmer  201                                                                                                                                      
Actor   202                                                                                                                                      
Architect       203                                                                                                                              
Computer hardware engineer      204                                                                                                              
Teacher 204                                                                                                                                      
Engineering technician  204                                                                                                                      
Designer        205                                                                                                                              
Musician        205                                                                                                                              
Childcare worker        207                                                                                                                      
Veterinarian    208                                                                                                                              
Chemist 209                                                                                                                                      
Police officer  210                                                                                                                              
Recreation and fitness worker   210                                                                                                              
Pilot   211                                                                                                                                      
Lawyer  212                                                                                                                                      
Social worker   212                                                                                                                              
Human resources assistant       212                                                                                                              
Pharmacist      213                                                                                                                              
Computer software engineer      216                                                                                                              
Firefighter     217                                                                                                                              
Librarian       218                                                                                                                              
Loan officer    221                                                                                                                              
Photographer    222                                                                                                                              
Computer support specialist     222                                                                                                              
Politician      228                                                                                                                              
Time taken: 112.93 seconds, Fetched: 51 row(s)                                                                                                   
hive>                                              






















Q2) ) Write a program to find the top 10 products sales wise

Create table sales
create table sales (tax_id INT, tax_date STRING, cust_id INT, ammount DOUBLE,category STRING,product STRING,city STRING,state STRING,spendby STRING) row format delimited fields terminated by ‘,’ stored as textfile;

select product,sum(ammount) as total  from sales41 group by product order by total;
Answer-

Air Suits       19371.570000000007                                                                                                               
Mechanical Puzzles      20381.669999999984                                                                                                       
Disc Golf       33944.02000000002                                                                                                                
Surfing 35069.079999999965                                                                                                                       
Tetherball      35611.92999999999                                                                                                                
Downhill Skiing 36870.35999999996                                                                                                                
Cricket 37061.58000000001                                                                                                                        
Archery 37088.659999999945                                                                                                                       
Fishing 37144.60999999998                                                                                                                        
Exercise Bands  37679.750000000015                                                                                                               
Kitesurfing     37730.88999999995                                                                                                                
Baseball        37843.81999999998    

























Q3) Write a program to create partiioned table on category

create table sales (tax_id INT, tax_date STRING, cust_id INT, ammount DOUBLE,product STRING,city STRING,state STRING,spendby STRING) 
partitioned by (category STRING) row format delimited fields terminated by ',' stored as textfile;  


Insert overwrite table sales partition(category)
Select txn.txn_id ,txn.txn_date , txn.cust_id,txn.ammount,txn.product,txn.city, txn.state, txn.spendby, txn.category
From sales41 txn distribute by category;


































Map-Reduce 
Q) 



import java.io.*;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.fs.*;
import org.apache.hadoop.mapreduce.lib.input.*;
import org.apache.hadoop.mapreduce.lib.output.*;


public class AllTimeHigh2 {
	
 public static class MapClass extends Mapper<LongWritable,Text,Text,DoubleWritable>
    {
       public void map(LongWritable key, Text value, Context context)
       {        
          try{
             String[] str = value.toString().split(",");  
             double high = Double.parseDouble(str[4]);
             context.write(new Text(str[1]),new DoubleWritable(high));
          }
          catch(Exception e)
          {
             System.out.println(e.getMessage());
          }
       }
    }
	
   public static class ReduceClass extends Reducer<Text,DoubleWritable,Text,DoubleWritable>
    {
      private DoubleWritable result = new DoubleWritable();
      
      public void reduce(Text key, Iterable<DoubleWritable> values,Context context) throws IOException, InterruptedException {
        double max = 0.00;
    
           for (DoubleWritable val : values)
           {        
           if(val.get()>max)   
           {
            max=val.get();
           }
           }
           
        result.set(max);        
        context.write(key, result);
        //context.write(key, new LongWritable(sum));
        
      }
    }
   public static void main(String[] args) throws Exception {
      Configuration conf = new Configuration();
      conf.set("mapreduce.output.textoutputformat.separator",",");

      //conf.set("name", "value")
      conf.set("mapreduce.input.fileinputformat.split.minsize", "134217728");
      Job job = Job.getInstance(conf, "All Time High Price for each job");
      job.setJarByClass(AllTimeHigh.class);
      job.setMapperClass(MapClass.class);
      job.setCombinerClass(ReduceClass.class);
      job.setReducerClass(ReduceClass.class);
      job.setNumReduceTasks(1);
      job.setOutputKeyClass(Text.class);
      job.setOutputValueClass(DoubleWritable.class);
      FileInputFormat.addInputPath(job, new Path(args[0]));
      FileOutputFormat.setOutputPath(job, new Path(args[1]));
      System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}


AA,94.62 AAI,57.88 AAN,35.21 AAP,83.65 AAR,25.25 AAV,24.78 AB,94.94 ABA,27.94 ABB,33.39 ABC,84.35 ABD,28.58 ABG,30.06 ABK,96.1 ABM,41.63 ABR,34.45 ABT,93.37 ABV,107.5 ABVT,100.0 ABX,54.74 ACC,37.0 ACE,104.0 ACF,64.9 ACG,12.63 ACH,111.6 ACI,112.89 ACL,178.56 ACM,38.25 ACN,44.03 ACO,42.7 ACS,109.55 ACV,65.32 ADC,37.7 ADI,185.5 ADM,48.95 ADP,84.31 ADS,80.79 ADX,40.56 ADY,44.0 AEA,23.94 AEB,26.5 AEC,17.6 AED,26.12 AEE,56.77 AEF,27.0 AEG,148.32 AEH,26.64 AEL,14.6 AEM,83.45 AEO,88.13 AEP,53.31 AER,32.82 AES,92.5 AET,154.67 AEV,26.78 AF,63.09 AFB,17.03 AFC,25.15 AFE,26.7 AFF,25.15 AFG,54.65 AFL,74.94 AFN,11.99 AGC,20.2 AGCO,71.95 AGD,25.5 AGL,44.67 AGM,80.0 AGN,125.0 AGO,31.99 AGP,80.89 AGU,113.88 AHC,16.35 AHD,47.12 AHL,30.8 AHS,37.4 AHT,13.48 AI,28.7 AIB,125.0 AIG,157.19 AIN,43.62 AIQ,15.4 AIR,46.58 AIT,59.0 AIV,65.79 AIZ,71.31 AJG,68.5 AKF,26.42 AKP,17.45 AKR,29.0 AKS,73.07 AKT,26.25 ALB,86.52 ALC,27.86 ALD,33.35 ALE,51.7 ALEX,44.52 ALF,26.75 ALG,29.23 ALJ,47.1 ALK,62.56 ALL,100.25 ALM,27.79 ALQ,28.5 ALU,86.25 ALV,65.09 ALX,471.0 ALY,28.1 ALZ,26.25 AM,62.88 AMB,66.86 AMD,97.0 AME,53.12 AMG,136.51 AMN,138.65 AMP,69.25 AMR,69.01 AMT,55.5 AMX,69.15 AN,53.93 ANF,101.5 ANH,16.65 ANN,53.06 ANR,119.3 ANW,48.63 AOB,14.48 AOD,21.85 AOI,23.38 AOL,27.0 AON,75.56 AOS,58.06 AP,54.46 APA,149.23 APB,36.14 APC,113.95 APD,106.06 APF,24.53 APH,121.06 APL,56.88 APU,42.94 APX,12.38 ARB,55.63 ARD,71.08 ARE,116.5 ARG,65.45 ARI,19.2 ARJ,48.02 ARK,8.29 ARL,22.25 ARM,32.5 ARO,47.82 ARP,39.0 ART,28.1 ARW,64.12 ASA,92.6 ASF,89.12 ASG,12.56 ASH,76.25 ASI,24.21 ASP,16.87 ASR,63.54 ASX,7.49 ATE,58.02 ATI,119.7 ATK,120.9 ATO,33.47 ATR,76.98 ATT,27.14 ATU,70.17 ATV,32.33 ATW,126.92 AU,62.2 AUO,28.5 AUY,19.93 AV,15.05 AVA,67.76 AVB,149.94 AVD,51.0 AVF,27.0 AVK,29.75 AVP,90.45 AVT,81.12 AVX,100.0 AVY,78.5 AWC,32.85 AWF,15.46 AWH,53.48 AWI,57.48 AWK,23.77 AWP,20.55 AWR,48.0 AXA,80.94 AXE,88.4 AXL,42.1 AXP,169.5 AXR,149.99 AXS,43.35 AYE,65.48 AYI,66.89 AYN,15.42 AYR,41.31 AZN,145.41 AZO,169.99 AZZ,59.2





PySpark

schema41 = StructType().add("year",StringType(),True).add("quarter",IntegerType(),True).add("ARPS",IntegerType(),True).add("TNBS",InterType(),
True)



airlines41 = spark.read.format("csv").option("sep",",").option("header","True").schema(schema41).load("hdfs://nameservice1/user/bigcdac432553/
training/airlines.csv")

Q1 = spark.sql(“select year,sum(TNBS) as total from airlines41 group by year order by total desc limit 1 ”)

Q2 = spark.sql(“select sum(ARPS*TNBS) as revenue order by revenue limit 1”)

